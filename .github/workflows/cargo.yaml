name: Test and Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    shell: bash

jobs:
  lint:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
        toolchain:
          - stable
          - nightly
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout the source code
        uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: rustfmt, clippy
      - name: fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings -A clippy::type_complexity
  test:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
        toolchain:
          - stable
          - nightly
    services:
      postgres:
        image: postgres:11-alpine
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: simple_note
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ${{ matrix.os }}
    env:
      DATABASE_URL: "postgres://postgres:password@localhost:5432/simple_note?sslmode=disable"
      RUST_BACKTRACE: full
    steps:
      - name: checkout the source code
        uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
      - name: Install diesel
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: diesel_cli --no-default-features --features "postgres"
      - name: Run migrations
        run: diesel migration run
      - name: test
        uses: actions-rs/cargo@v1
        with:
          command: test
