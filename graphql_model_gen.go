// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package main

import (
	"time"
)

type Node interface {
	IsNode()
}

type Account struct {
	Email string          `json:"email"`
	Notes *NoteConnection `json:"notes"`
}

type Note struct {
	ID         string     `json:"id"`
	Title      string     `json:"title"`
	Contents   *string    `json:"contents"`
	CreatedAt  time.Time  `json:"createdAt"`
	ModifiedAt *time.Time `json:"modifiedAt"`
}

func (Note) IsNode() {}

type NoteConnection struct {
	Edges    []*NoteEdge `json:"edges"`
	PageInfo *PageInfo   `json:"pageInfo"`
}

type NoteEdge struct {
	Node   Node   `json:"node"`
	Cursor string `json:"cursor"`
}

type NoteInput struct {
	Title    string  `json:"title"`
	Contents *string `json:"contents"`
}

type PageInfo struct {
	HasNextPage     bool   `json:"hasNextPage"`
	HasPreviousPage bool   `json:"hasPreviousPage"`
	EndCursor       string `json:"endCursor"`
	StartCursor     string `json:"startCursor"`
}
